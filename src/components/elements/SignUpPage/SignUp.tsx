import { MY_IMAGE } from "@/generated/path/images";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useState } from "react";
import styled from "styled-components";
import { Auth } from "aws-amplify";

const Main = styled.div`
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
`;

const Container = styled.div`
  width: 600px;
  height: 600px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
`;

const LoginBox = styled.div`
  width: 80%;
  height: 60%;
  color: white;
  > * {
    font-weight: bold;
  }
`;

const LogoBox = styled.div`
  width: 100%;
  text-align: center;
`;

const Title = styled.div`
  font-size: 25px;
  text-align: center;
  font-weight: bold;
  margin-top: 20px;
  margin-bottom: 10px;
`;

const InputBox = styled.div`
  display: flex;
  width: 100%;
  align-items: center;
  margin-top: 20px;
`;

const InputTitle = styled.div`
  width: 30%;
  text-align: right;
  margin-right: 10px;
`;

const InputText = styled.input`
  width: 70%;
  height: 35px;
  backgronud-color: white;
  border-radius: 15px;
  border: none;
  padding-left: 10px;
  font-size: 12px;
`;

const ButtonDiv = styled.div`
  margin-top: 20px;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  & > button {
    width: 45%;
    background-color: red;
    color: white;
    border: none;
    padding: 15px;
    cursor: pointer;
    font-weight: bolder;
    border-radius: 10px;
  }
`;

const Error = styled.div`
  margin-top: 10px;
  width: 100%;
  text-align: center;
  color: red;
  font-size: 13px;
`;

function SignUp() {
  const [memberData, setMemberData] = useState({
    loginID: "",
    loginPW: "",
    reEnterPW: "",
  });
  const [idErrorState, setIdErrorState] = useState(false);
  const [pwErrorState, setPwErrorState] = useState(false);
  const [token, setToken] = useState("");
  const router = useRouter();

  const idRegex = /^[a-z]+[a-z0-9]{5,13}$/;
  const pwRegex = /^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{5,16}$/;

  const onSignUp = async () => {
    if (!idRegex.test(memberData.loginID)) {
      setIdErrorState(true);
      setPwErrorState(false);
      return;
    } else if (
      !pwRegex.test(memberData.loginPW) ||
      memberData.loginPW !== memberData.reEnterPW
    ) {
      setIdErrorState(false);
      setPwErrorState(true);
      return;
    }

    setPwErrorState(false);
    setIdErrorState(false);

    const user = await Auth.signUp(memberData.loginID, memberData.loginPW);
    console.log(user);
    console.log(memberData);
  };

  const inputSignData = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { value, name } = e.target;
    setMemberData((prev) => ({ ...prev, [name]: value }));
  };
  return (
    <>
      <Head>
        <title>{"M.Z | 회원가입"}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href={MY_IMAGE.LOGO} />
      </Head>
      <Main>
        <Container>
          <LoginBox>
            <LogoBox>
              <img src={MY_IMAGE.LOGO_FULL_NAME} />
            </LogoBox>
            <Title>{"회원가입"}</Title>
            <InputBox>
              <InputTitle>{"아이디: "}</InputTitle>
              <InputText
                onChange={(e) => inputSignData(e)}
                name="loginID"
                required
                placeholder="아이디(영문자로 시작/소문자,숫자 혼합 6 ~ 14자)"
                maxLength={14}
              />
            </InputBox>
            <InputBox>
              <InputTitle>{"비밀번호: "}</InputTitle>
              <InputText
                name="loginPW"
                required
                type={"password"}
                placeholder="비밀번호(소문자,숫자 혼합 6 ~ 17자)"
                onChange={(e) => inputSignData(e)}
                maxLength={17}
              />
            </InputBox>
            <InputBox>
              <InputTitle>{"비밀번호확인: "}</InputTitle>
              <InputText
                name="reEnterPW"
                required
                type={"password"}
                placeholder="비밀번호를 한번 더 입력해주세요."
                onChange={(e) => inputSignData(e)}
                maxLength={17}
              />
            </InputBox>
            {idErrorState && <Error>{"아이디를 제대로 입력해주세요"}</Error>}
            {pwErrorState && (
              <Error>
                {"비밀번호를 제대로 입력하거나 일치하는지 확인하세요"}
              </Error>
            )}
            <ButtonDiv>
              <button onClick={onSignUp}>{"회원가입"}</button>
              <button onClick={() => router.push("/")}>{"뒤로"}</button>
            </ButtonDiv>
          </LoginBox>
        </Container>
      </Main>
    </>
  );
}

export default SignUp;
